apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
  labels: &labels
    app: my-app
    app.kubernetes.io/instance: my-app
    app.kubernetes.io/name: my-app
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels: *labels
  template:
    metadata:
      annotations:
        app: my-app
      labels: *labels
    spec:
      imagePullSecrets: []
      serviceAccountName: my-app
      securityContext:
        readOnlyRootFilesystem: false
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: my-app
          securityContext:
            fsGroup: 1000
          image: "1.23.3-alpine"
          imagePullPolicy: IfNotPresent
          # env:
          # - name: EXAMPLE_FROM_METADATA
          #   valueFrom:
          #     fieldRef:
          #       fieldPath: status.hostIP
          # - name: EXAMPLE_FROM_STRING_LITERAL
          #   value: example
          # - name: EXAMPLE_FROM_CONFIGMAP
          #   valueFrom:
          #     configMapKeyRef:
          #       key: key
          # - name: EXAMPLE_FROM_SECRET
          #   valueFrom:
          #     secretKeyRef:
          #       key: key
          # envFrom: # enable if needed
          #   - secretRef:
          #       name: my-app-secret
          #       optional: false
          #   - configMapRef:
          #       name: my-app-configmap
          #       optional: false
          # ports: # enable if needed
          #   - name: http
          #     containerPort: 3000
          #     protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /healthz
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /readyz
          #     port: http
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 500Mi
          # volumeMounts: # enable if needed
          #   - name: example-volume-from-configmap
          #     mountPath: /mount/path/configmap
          #   - name: example-volume-from-secret
          #     mountPath: /mount/path/secret
      # volumes: # enable if needed
      #   - name: example-volume-from-configmap
      #     configMap:
      #       defaultMode: 440
      #       name: my-app-configmap-volume
      #   - name: example-volume-from-secret
      #     secret:
      #       defaultMode: 440
      #       secretName: my-app-secret-volume
      nodeSelector: {}
      affinity: {}
      tolerations: {}
